#include <iostream>
using namespace std;


bool printer(int **main_array , int m) {
    for (int row = 0; row < m; row++) {
        for (int column = 0; column < m; column++) {   // wywod;
            cout << main_array[row][column] << "  ";

        }
        cout << endl;

    }
    return 0;
}

int find_max(int **main_array , int m ) {
    int max = 0;
    for (int row = 0; row < m; row++) {
        for (int column = 0; column < m; column++) { //find_max ;
            if (max < main_array[row][column]) {
                max = main_array[row][column];
            }

        }
        cout << endl;

    }
    return max;
}


int main() {
    srand(time(0));
    int n;
    
    cin >> n;
   
    int** array = new int* [n];   // sozdanie 2m masiw;
    for (int i = 0; i < n; i++) {
        array[i] = new int[n];
    }

    for (int row = 0; row < n; row++) {
        for (int column = 0; column < n; column++) {
            array[row][column] = (rand() % 10 + 1);    //zapolnienie rand. somwolami 0-10 ;
        }
    }

    printer(array ,n);

    int max = find_max(array, n);

    cout << "max value is " << max<<endl; 
    int x = 0;
    int y = 0;
    int finder = 0;

    for (int row = 0; row < n; row++) {
        for (int column = 0; column < n; column++) { //find_row_column (koordinaty max);
            
           if (array[row][column] == max && finder < 1) {
                    x = row + 1;
                    y = column + 1;
                    finder++;
           }
          
        }
      
    }

    cout << "row = "<<x<<" "<<"column = " << y << endl;
    int helper = 0;
    for (int row = 0; row < n; row++) {
        for (int column = 0; column < n; column++) { //perestanowka column  ;

            if (column == (y - 1) && column < n) {
                while (column < n-1) {
                    helper = array[row][column];
                    array[row][column] = array[row][column+1];
                    array[row][column+1] = helper;
                    column++;
                }
            }

        }
        cout << endl;
    }
    
    printer(array , n );

    int helper2 = 0;
   
    for (int row = 0; row < n; row++) {
           for (int column = 0; column < n; column++) { //perestanowka rows  ;

               if (row == (x - 1) && row < n-1 ) {
                   
                       helper2 = array[row][column];
                       array[row][column] = array[row + 1][column];
                       array[row + 1][column] = helper2;
                       
               }

          }
           if (helper2 != 0) {
               x++;
           }
           cout << endl;
     }

    printer(array, n);

    for(int i = 0; i < 2; i++)
        delete[]array[i]; // oswobozdenie pamyati .

    return 0;
}
